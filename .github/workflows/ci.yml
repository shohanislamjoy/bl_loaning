name: Easy Loan CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

env:
  FLUTTER_VERSION: "3.8.1"
  DART_VERSION: "2.19.1"

jobs:
  # Code Quality & Testing
  analyze:
    name: Analyze & Test
    runs-on: ubuntu-latest
    
    steps:
    - name: 📦 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🐦 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true
        
    - name: 🔍 Verify Flutter installation
      run: flutter doctor -v
      
    - name: 📋 Get dependencies
      run: flutter pub get
      
    - name: 📝 Generate code
      run: flutter packages pub run build_runner build --delete-conflicting-outputs
      
    - name: 🔍 Analyze code
      run: flutter analyze
      
    - name: 🧪 Run tests
      run: flutter test --coverage
      
    - name: 📊 Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage/lcov.info
        name: easy-loan-coverage
        fail_ci_if_error: false

  # Security Scanning
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📦 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🔒 Run security audit
      run: |
        flutter pub deps
        flutter pub audit
        
    - name: 🛡️ Run dependency check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'Easy Loan'
        path: '.'
        format: 'ALL'
        
    - name: 📋 Upload security results
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: reports/

  # Build for Android
  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    needs: [analyze, security]
    
    steps:
    - name: 📦 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🐦 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true
        
    - name: ☕ Setup Java
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'zulu'
        
    - name: 📋 Get dependencies
      run: flutter pub get
      
    - name: 📝 Generate code
      run: flutter packages pub run build_runner build --delete-conflicting-outputs
      
    - name: 🔨 Build APK (Debug)
      run: flutter build apk --debug
      
    - name: 🔨 Build APK (Release)
      if: github.event_name == 'release'
      run: flutter build apk --release
      
    - name: 🔨 Build AAB (Release)
      if: github.event_name == 'release'
      run: flutter build appbundle --release
      
    - name: 📋 Upload APK artifacts
      uses: actions/upload-artifact@v3
      with:
        name: android-apk
        path: build/app/outputs/flutter-apk/
        
    - name: 📋 Upload AAB artifacts
      if: github.event_name == 'release'
      uses: actions/upload-artifact@v3
      with:
        name: android-aab
        path: build/app/outputs/bundle/release/

  # Build for iOS
  build-ios:
    name: Build iOS
    runs-on: macos-latest
    needs: [analyze, security]
    
    steps:
    - name: 📦 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🐦 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true
        
    - name: 📋 Get dependencies
      run: flutter pub get
      
    - name: 📝 Generate code
      run: flutter packages pub run build_runner build --delete-conflicting-outputs
      
    - name: 🔨 Build iOS (Debug)
      run: flutter build ios --debug --no-codesign
      
    - name: 🔨 Build iOS (Release)
      if: github.event_name == 'release'
      run: flutter build ios --release --no-codesign
      
    - name: 📋 Upload iOS artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ios-build
        path: build/ios/iphoneos/

  # Build for Web
  build-web:
    name: Build Web
    runs-on: ubuntu-latest
    needs: [analyze, security]
    
    steps:
    - name: 📦 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🐦 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true
        
    - name: 📋 Get dependencies
      run: flutter pub get
      
    - name: 📝 Generate code
      run: flutter packages pub run build_runner build --delete-conflicting-outputs
      
    - name: 🔨 Build Web
      run: flutter build web --release
      
    - name: 📋 Upload Web artifacts
      uses: actions/upload-artifact@v3
      with:
        name: web-build
        path: build/web/

  # Smart Contract Testing
  contract-test:
    name: Smart Contract Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: 📦 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 📋 Install dependencies
      working-directory: contracts
      run: npm install
      
    - name: 🔨 Compile contracts
      working-directory: contracts
      run: npx hardhat compile
      
    - name: 🧪 Run contract tests
      working-directory: contracts
      run: npx hardhat test
      
    - name: 🔍 Run coverage
      working-directory: contracts
      run: npx hardhat coverage
      
    - name: 📊 Upload contract coverage
      uses: codecov/codecov-action@v3
      with:
        files: ./contracts/coverage/lcov.info
        name: smart-contract-coverage
        fail_ci_if_error: false

  # Deploy to GitHub Pages (Web Build)
  deploy-web:
    name: Deploy Web to GitHub Pages
    runs-on: ubuntu-latest
    needs: [build-web]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    permissions:
      contents: read
      pages: write
      id-token: write
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: 📦 Download web artifacts
      uses: actions/download-artifact@v3
      with:
        name: web-build
        path: ./web-build
        
    - name: 📄 Setup Pages
      uses: actions/configure-pages@v3
      
    - name: 📋 Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v2
      with:
        path: ./web-build
        
    - name: 🚀 Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2

  # Create Release
  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-android, build-ios, build-web, contract-test]
    if: github.event_name == 'release'
    
    steps:
    - name: 📦 Download all artifacts
      uses: actions/download-artifact@v3
      
    - name: 📋 Create release notes
      run: |
        echo "## 🚀 Easy Loan Release" > release-notes.md
        echo "" >> release-notes.md
        echo "### 📱 Mobile Apps" >> release-notes.md
        echo "- Android APK and AAB builds included" >> release-notes.md
        echo "- iOS build available for TestFlight distribution" >> release-notes.md
        echo "" >> release-notes.md
        echo "### 🌐 Web Application" >> release-notes.md
        echo "- Deployed to GitHub Pages" >> release-notes.md
        echo "" >> release-notes.md
        echo "### 🔗 Blockchain Integration" >> release-notes.md
        echo "- Smart contracts tested and verified" >> release-notes.md
        echo "- Ethereum Sepolia testnet compatible" >> release-notes.md
        
    - name: 📦 Add assets to release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          android-apk/*
          android-aab/*
        body_path: release-notes.md
        draft: false
        prerelease: false

  # Notification
  notify:
    name: Notify Team
    runs-on: ubuntu-latest
    needs: [build-android, build-ios, build-web, contract-test]
    if: always()
    
    steps:
    - name: 📧 Send notification
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        channel: '#easy-loan-dev'
        text: |
          Easy Loan CI/CD Pipeline completed!
          Status: ${{ job.status }}
          Branch: ${{ github.ref }}
          Commit: ${{ github.sha }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
